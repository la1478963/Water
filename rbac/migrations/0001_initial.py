# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-11-08 15:58
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ALiCloud',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=32, null=True, verbose_name='登录用户')),
                ('password', models.CharField(blank=True, max_length=128, null=True, verbose_name='登录密码')),
                ('remarks', models.CharField(blank=True, max_length=2048, null=True, verbose_name='备注')),
                ('accesskey_id', models.CharField(blank=True, max_length=128, null=True, verbose_name='AccessKey')),
                ('accesskeysecret', models.CharField(blank=True, max_length=128, null=True, verbose_name='AccessKeySecret')),
            ],
            options={
                'verbose_name_plural': '阿里云',
            },
        ),
        migrations.CreateModel(
            name='App',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64, null=True, verbose_name='应用名')),
                ('path', models.CharField(blank=True, max_length=256, null=True, verbose_name='应用路径')),
                ('remarks', models.CharField(blank=True, max_length=2048, null=True, verbose_name='备注')),
                ('ab', models.SmallIntegerField(blank=True, choices=[(1, 'A'), (2, 'B'), (3, 'VPC')], null=True, verbose_name='A/B组')),
                ('environment', models.SmallIntegerField(blank=True, choices=[(1, '开发环境'), (2, '测试环境'), (3, '灰度环境'), (4, '压测环境'), (5, '生产环境')], null=True, verbose_name='环境')),
            ],
            options={
                'verbose_name_plural': '项目组应用',
            },
        ),
        migrations.CreateModel(
            name='BacketName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=32, null=True, verbose_name='BacketName')),
                ('ossauth', models.SmallIntegerField(choices=[(1, '私有'), (2, '公共读'), (3, '公共写')], verbose_name='用户权限')),
                ('remarks', models.CharField(blank=True, max_length=2048, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name_plural': 'BacketName',
            },
        ),
        migrations.CreateModel(
            name='Consumer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=32, null=True, verbose_name='CID')),
                ('remarks', models.CharField(blank=True, max_length=2048, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name_plural': '消费者',
            },
        ),
        migrations.CreateModel(
            name='DataBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64, null=True, verbose_name='库')),
            ],
            options={
                'verbose_name_plural': '库',
            },
        ),
        migrations.CreateModel(
            name='Disk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(blank=True, max_length=64, null=True, verbose_name='挂载路径')),
                ('size', models.CharField(blank=True, max_length=16, null=True, verbose_name='磁盘大小/G')),
                ('remarks', models.CharField(blank=True, max_length=2048, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name_plural': '磁盘表',
            },
        ),
        migrations.CreateModel(
            name='Ftp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=64, null=True, verbose_name='用户')),
                ('password', models.CharField(blank=True, max_length=64, null=True, verbose_name='密码')),
                ('path', models.CharField(blank=True, max_length=64, null=True, verbose_name='项目')),
                ('remarks', models.CharField(blank=True, max_length=2048, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name_plural': 'Ftp',
            },
        ),
        migrations.CreateModel(
            name='GitLab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=16, null=True, verbose_name='组名称')),
            ],
            options={
                'verbose_name_plural': '权限组',
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(blank=True, max_length=64, null=True, verbose_name='阿里云主机名')),
                ('ecsname', models.CharField(blank=True, max_length=64, null=True, verbose_name='阿里云实例ID')),
                ('login_port', models.CharField(blank=True, default='22', max_length=16, null=True, verbose_name='ssh登录端口')),
                ('cpu', models.CharField(blank=True, max_length=8, null=True, verbose_name='CPU')),
                ('mem', models.CharField(blank=True, max_length=8, null=True, verbose_name='内存/M')),
                ('speed', models.CharField(blank=True, default='5', max_length=8, null=True, verbose_name='带宽/M')),
                ('eth1_network', models.CharField(blank=True, max_length=32, null=True, verbose_name='公网IP')),
                ('eth0_network', models.CharField(max_length=32, verbose_name='私网IP')),
                ('sn', models.CharField(blank=True, max_length=64, null=True, verbose_name='sn')),
                ('kernel', models.CharField(blank=True, max_length=64, null=True, verbose_name='系统内核')),
                ('remarks', models.CharField(blank=True, max_length=2048, null=True, verbose_name='备注')),
                ('createtime', models.CharField(blank=True, max_length=32, null=True, verbose_name='创建时间')),
                ('expirytime', models.CharField(blank=True, max_length=32, null=True, verbose_name='到期时间')),
                ('state', models.SmallIntegerField(blank=True, choices=[(1, 'Running'), (2, '下线'), (3, '关机'), (4, '删除')], null=True, verbose_name='主机状态')),
                ('disks', models.ManyToManyField(blank=True, null=True, to='rbac.Disk', verbose_name='磁盘')),
            ],
            options={
                'verbose_name_plural': '主机表',
            },
        ),
        migrations.CreateModel(
            name='HostMonitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.CharField(blank=True, max_length=64, null=True, verbose_name='UTC时间')),
                ('cpu', models.IntegerField(blank=True, null=True, verbose_name='cpu使用率')),
                ('mem', models.IntegerField(blank=True, null=True, verbose_name='内存使用率')),
                ('load', models.IntegerField(blank=True, null=True, verbose_name='系统负载')),
                ('iopswrite', models.IntegerField(blank=True, null=True, verbose_name='系统盘IO写次数/s')),
                ('iopsread', models.IntegerField(blank=True, null=True, verbose_name='系统盘IO读次数/s')),
                ('bpsread', models.IntegerField(blank=True, null=True, verbose_name='系统盘IO读带宽Byte/s')),
                ('bpswrite', models.IntegerField(blank=True, null=True, verbose_name='系统盘IO写带宽Byte/s')),
                ('intranetbandwidth', models.IntegerField(blank=True, null=True, verbose_name='内网带宽kbits/s')),
                ('internetbandwidth', models.IntegerField(blank=True, null=True, verbose_name='公网带宽kbits/s')),
                ('internetrx', models.IntegerField(blank=True, null=True, verbose_name='接收的公网流量 kbits')),
                ('internettx', models.IntegerField(blank=True, null=True, verbose_name='发送的公网流量 kbits')),
                ('intranetrx', models.IntegerField(blank=True, null=True, verbose_name='接受的内网流量 kbits')),
                ('intranettx', models.IntegerField(blank=True, null=True, verbose_name='发送的内网流量 kbits')),
                ('host', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hm', to='rbac.Host', verbose_name='实例id')),
            ],
            options={
                'verbose_name_plural': '主机监控数据',
            },
        ),
        migrations.CreateModel(
            name='Jira',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=32, null=True, verbose_name='Jira需求编号')),
            ],
            options={
                'verbose_name_plural': 'jira_id',
            },
        ),
        migrations.CreateModel(
            name='JiraVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.CharField(blank=True, max_length=64, null=True, verbose_name='流程号')),
                ('version', models.CharField(blank=True, max_length=32, null=True, verbose_name='版本号')),
                ('jira', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jiraver', to='rbac.Jira', verbose_name='jira')),
            ],
            options={
                'verbose_name_plural': '版本',
            },
        ),
        migrations.CreateModel(
            name='Kafka',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('port', models.CharField(blank=True, default='9092', max_length=8, null=True, verbose_name='端口号')),
                ('start_user', models.CharField(blank=True, default='appuser', max_length=16, null=True, verbose_name='启动用户')),
                ('kafka_tag', models.CharField(blank=True, max_length=64, null=True, verbose_name='标识')),
                ('remarks', models.CharField(blank=True, max_length=2048, null=True, verbose_name='备注')),
                ('apps', models.ManyToManyField(blank=True, null=True, related_name='kafka', to='rbac.App', verbose_name='使用应用')),
                ('ip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ip_kafka', to='rbac.Host', verbose_name='主机ip')),
            ],
            options={
                'verbose_name_plural': 'Kafka',
            },
        ),
        migrations.CreateModel(
            name='Lable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=16, null=True, verbose_name='标签')),
            ],
            options={
                'verbose_name_plural': '标签',
            },
        ),
        migrations.CreateModel(
            name='Login',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_name', models.CharField(default='root', max_length=16, verbose_name='登录用户名')),
                ('login_pwd', models.CharField(blank=True, max_length=64, null=True, verbose_name='登录密码')),
                ('auth', models.CharField(blank=True, max_length=8, null=True, verbose_name='具有权限')),
            ],
            options={
                'verbose_name_plural': '主机用户表',
            },
        ),
        migrations.CreateModel(
            name='Memory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(blank=True, max_length=32, null=True, verbose_name='内存/G')),
                ('width', models.CharField(blank=True, max_length=8, null=True, verbose_name='位数')),
                ('locator', models.CharField(blank=True, max_length=16, null=True, verbose_name='插槽')),
                ('type', models.CharField(blank=True, max_length=16, null=True, verbose_name='内存类型')),
            ],
            options={
                'verbose_name_plural': '内存表',
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=32, null=True, verbose_name='菜单')),
                ('is_menu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rbac.Menu', verbose_name='母菜单')),
            ],
            options={
                'verbose_name_plural': '菜单表',
            },
        ),
        migrations.CreateModel(
            name='MqCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(blank=True, max_length=128, null=True, verbose_name='链接')),
                ('name', models.CharField(blank=True, max_length=32, null=True, verbose_name='实例名')),
                ('region', models.CharField(blank=True, max_length=16, null=True, verbose_name='区域')),
                ('remarks', models.CharField(blank=True, max_length=2048, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name_plural': 'Mq实例',
            },
        ),
        migrations.CreateModel(
            name='Mysql',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(blank=True, max_length=64, null=True, verbose_name='实例url')),
                ('name', models.CharField(blank=True, max_length=32, null=True, verbose_name='实例名')),
                ('hostname', models.CharField(blank=True, max_length=32, null=True, verbose_name='实例id')),
                ('type', models.CharField(blank=True, max_length=16, null=True, verbose_name='数据库版本')),
                ('cpu', models.IntegerField(blank=True, max_length=4, null=True, verbose_name='cpu')),
                ('memory', models.IntegerField(blank=True, null=True, verbose_name='内存')),
                ('iops', models.IntegerField(blank=True, null=True, verbose_name='IOPS')),
                ('maxconnet', models.IntegerField(blank=True, null=True, verbose_name='最大连接数')),
                ('maxstorage', models.CharField(blank=True, max_length=16, null=True, verbose_name='存储空间/G')),
                ('usestorage', models.CharField(blank=True, max_length=16, null=True, verbose_name='使用空间/G')),
                ('remarks', models.CharField(blank=True, max_length=2048, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name_plural': 'Mysql实例',
            },
        ),
        migrations.CreateModel(
            name='MysqlLogin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=64, null=True, verbose_name='授权账户')),
                ('username', models.CharField(blank=True, max_length=32, null=True, verbose_name='用户名')),
                ('password', models.CharField(blank=True, max_length=128, null=True, verbose_name='密码')),
                ('mysqlauth', models.SmallIntegerField(choices=[(1, 'ReadOnly'), (2, 'ReadWrite'), (3, 'root')], verbose_name='用户权限')),
                ('remarks', models.CharField(blank=True, max_length=2048, null=True, verbose_name='备注')),
                ('database', models.ManyToManyField(blank=True, null=True, related_name='logindatabase', to='rbac.DataBase', verbose_name='库名')),
            ],
            options={
                'verbose_name_plural': 'MysqlLogin',
            },
        ),
        migrations.CreateModel(
            name='OperationLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ctime', models.DateTimeField(auto_now_add=True, verbose_name='访问时间')),
                ('url', models.CharField(blank=True, max_length=256, null=True, verbose_name='访问url')),
                ('proj', models.CharField(blank=True, max_length=32, null=True, verbose_name='project')),
                ('action', models.CharField(blank=True, max_length=32, null=True, verbose_name='动作')),
                ('explain', models.CharField(blank=True, max_length=128, null=True, verbose_name='说明')),
            ],
        ),
        migrations.CreateModel(
            name='Os',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=16, null=True, verbose_name='系统名称')),
            ],
            options={
                'verbose_name_plural': '操作系统表',
            },
        ),
        migrations.CreateModel(
            name='Oss',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oss_tag', models.CharField(blank=True, max_length=64, null=True, verbose_name='标识')),
                ('remarks', models.CharField(blank=True, max_length=2048, null=True, verbose_name='备注')),
                ('apps', models.ManyToManyField(blank=True, null=True, related_name='oss', to='rbac.App', verbose_name='相关应用')),
                ('backetname', models.ManyToManyField(blank=True, null=True, to='rbac.BacketName', verbose_name='BacketName')),
                ('login', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rbac.ALiCloud', verbose_name='登录')),
            ],
            options={
                'verbose_name_plural': 'Oss',
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64, null=True, verbose_name='包名')),
                ('bool', models.BooleanField(default=0, verbose_name='是否应用')),
                ('disname', models.CharField(blank=True, max_length=64, null=True, verbose_name='原包名')),
                ('osspath', models.CharField(blank=True, max_length=128, null=True, verbose_name='oss路径')),
                ('serverpath', models.CharField(blank=True, max_length=128, null=True, verbose_name='服务器路径')),
                ('type', models.SmallIntegerField(blank=True, choices=[(1, 'war'), (2, 'jar'), (3, 'sql'), (4, 'xml'), (5, 'class'), (6, 'properties'), (7, 'key'), (8, 'other')], null=True, verbose_name='类型')),
                ('ctime', models.CharField(blank=True, max_length=32, null=True, verbose_name='创建时间')),
                ('md5', models.CharField(blank=True, max_length=64, null=True, verbose_name='md5')),
                ('packenv', models.CharField(blank=True, default='所有环境', max_length=16, null=True, verbose_name='配置所属环境')),
            ],
            options={
                'verbose_name_plural': '包',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='标题')),
                ('url', models.CharField(max_length=64, verbose_name='含正则URL')),
                ('code', models.CharField(max_length=16, verbose_name='代码')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rbac.Group', verbose_name='所属组')),
                ('menu_gp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='x1', to='rbac.Permission', verbose_name='默认选中的组内权限ID')),
            ],
            options={
                'verbose_name_plural': '权限URL表',
            },
        ),
        migrations.CreateModel(
            name='Producer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=32, null=True, verbose_name='PID')),
                ('remarks', models.CharField(blank=True, max_length=2048, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name_plural': '生产者',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=32, null=True, verbose_name='项目名')),
                ('tag', models.SmallIntegerField(choices=[(1, '刚录入'), (2, '提测'), (3, '已完结')], default=1, verbose_name='进度')),
                ('jira', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jr', to='rbac.Jira', verbose_name='jira')),
            ],
            options={
                'verbose_name_plural': '项目',
            },
        ),
        migrations.CreateModel(
            name='Pteam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=16, null=True, verbose_name='项目组名')),
                ('groupname', models.CharField(blank=True, max_length=16, null=True, verbose_name='项目组')),
            ],
            options={
                'verbose_name_plural': '项目组',
            },
        ),
        migrations.CreateModel(
            name='PteamPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=32, null=True, verbose_name='项目读写')),
                ('permissions', models.ManyToManyField(blank=True, null=True, to='rbac.Permission', verbose_name='具有的所有权限')),
            ],
            options={
                'verbose_name_plural': '项目权限表',
            },
        ),
        migrations.CreateModel(
            name='RabbitMQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remarks', models.CharField(blank=True, max_length=2048, null=True, verbose_name='备注')),
                ('apps', models.ManyToManyField(blank=True, null=True, related_name='mq', to='rbac.App', verbose_name='相关应用')),
                ('case', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rbac.MqCase', verbose_name='RabbitMQ实例')),
                ('mq_login', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rbac.ALiCloud', verbose_name='登录')),
            ],
            options={
                'verbose_name_plural': 'RabbitMQ',
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.CharField(blank=True, max_length=64, null=True, verbose_name='时间')),
                ('status', models.CharField(blank=True, max_length=64, null=True, verbose_name='状态')),
            ],
            options={
                'verbose_name_plural': '部署记录',
            },
        ),
        migrations.CreateModel(
            name='RecordEnv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64, null=True, verbose_name='环境')),
            ],
            options={
                'verbose_name_plural': '部署环境',
            },
        ),
        migrations.CreateModel(
            name='Redis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('port', models.CharField(blank=True, default='6379', max_length=64, null=True, verbose_name='端口')),
                ('password', models.CharField(blank=True, max_length=128, null=True, verbose_name='登录密码')),
                ('url', models.CharField(blank=True, max_length=64, null=True, verbose_name='链接')),
                ('redis_tag', models.CharField(blank=True, max_length=1024, null=True, verbose_name='标识')),
                ('remarks', models.CharField(blank=True, max_length=2048, null=True, verbose_name='备注')),
                ('apps', models.ManyToManyField(blank=True, null=True, related_name='redis', to='rbac.App', verbose_name='相关应用')),
            ],
            options={
                'verbose_name_plural': 'Redis',
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=16, null=True, verbose_name='来源')),
            ],
            options={
                'verbose_name_plural': '主机来源表',
            },
        ),
        migrations.CreateModel(
            name='Svn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(blank=True, max_length=64, null=True, verbose_name='项目')),
                ('remarks', models.CharField(blank=True, max_length=2048, null=True, verbose_name='备注')),
                ('svnauth', models.SmallIntegerField(choices=[(1, 'r'), (2, 'rw')], verbose_name='权限')),
            ],
            options={
                'verbose_name_plural': 'Svn',
            },
        ),
        migrations.CreateModel(
            name='SvnGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=32, null=True, verbose_name='组名')),
                ('username', models.CharField(blank=True, max_length=32, null=True, verbose_name='用户')),
                ('password', models.CharField(blank=True, max_length=64, null=True, verbose_name='密码')),
                ('remarks', models.CharField(blank=True, max_length=2048, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name_plural': 'Svn用户组',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=32, null=True, verbose_name='TopicID')),
                ('remarks', models.CharField(blank=True, max_length=2048, null=True, verbose_name='备注')),
                ('consumer', models.ManyToManyField(blank=True, null=True, to='rbac.Consumer', verbose_name='消费者')),
                ('producer', models.ManyToManyField(blank=True, null=True, to='rbac.Producer', verbose_name='生产者')),
            ],
            options={
                'verbose_name_plural': '队列',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=32, null=True, verbose_name='真实名称')),
                ('username', models.CharField(blank=True, max_length=16, null=True, verbose_name='用户名')),
                ('password', models.CharField(blank=True, max_length=32, null=True, verbose_name='密码')),
                ('token', models.CharField(blank=True, max_length=64, null=True, verbose_name='token')),
                ('pteamper', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user', to='rbac.PteamPermission', verbose_name='项目权限表')),
            ],
            options={
                'verbose_name_plural': '用户表',
            },
        ),
        migrations.CreateModel(
            name='VpcNet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=32, null=True, verbose_name='VPC网络ID')),
            ],
            options={
                'verbose_name_plural': 'VPC网络ID',
            },
        ),
        migrations.CreateModel(
            name='VpcSwitch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=32, null=True, verbose_name='VPC交换机ID')),
            ],
            options={
                'verbose_name_plural': 'VPC交换机',
            },
        ),
        migrations.CreateModel(
            name='Zookeeper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('port', models.CharField(blank=True, default='2181', max_length=8, null=True, verbose_name='端口号')),
                ('start_user', models.CharField(blank=True, default='appuser', max_length=16, null=True, verbose_name='启动用户')),
                ('zk_tag', models.CharField(blank=True, max_length=64, null=True, verbose_name='标识')),
                ('remarks', models.CharField(blank=True, max_length=2048, null=True, verbose_name='备注')),
                ('apps', models.ManyToManyField(blank=True, null=True, related_name='zk', to='rbac.App', verbose_name='使用应用')),
                ('ip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ip_zk', to='rbac.Host', verbose_name='主机ip')),
            ],
            options={
                'verbose_name_plural': 'Zookeeper',
            },
        ),
        migrations.AddField(
            model_name='svn',
            name='groups',
            field=models.ManyToManyField(blank=True, null=True, to='rbac.SvnGroup', verbose_name='Svn组'),
        ),
        migrations.AddField(
            model_name='record',
            name='env',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='env', to='rbac.RecordEnv', verbose_name='环境'),
        ),
        migrations.AddField(
            model_name='record',
            name='package',
            field=models.ManyToManyField(blank=True, null=True, related_name='pack', to='rbac.Package', verbose_name='包'),
        ),
        migrations.AddField(
            model_name='record',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='proj', to='rbac.Project', verbose_name='项目'),
        ),
        migrations.AddField(
            model_name='rabbitmq',
            name='topic',
            field=models.ManyToManyField(blank=True, null=True, to='rbac.Topic', verbose_name='队列'),
        ),
        migrations.AddField(
            model_name='package',
            name='proj',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pj', to='rbac.Project', verbose_name='所属项目'),
        ),
        migrations.AddField(
            model_name='operationlog',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='us', to='rbac.User', verbose_name='操作员'),
        ),
        migrations.AddField(
            model_name='host',
            name='lab',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rbac.Lable', verbose_name='标签'),
        ),
        migrations.AddField(
            model_name='host',
            name='logining',
            field=models.ManyToManyField(blank=True, null=True, to='rbac.Login', verbose_name='授权用户'),
        ),
        migrations.AddField(
            model_name='host',
            name='os',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rbac.Os', verbose_name='操作系统'),
        ),
        migrations.AddField(
            model_name='host',
            name='source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rbac.Source', verbose_name='来源类型'),
        ),
        migrations.AddField(
            model_name='host',
            name='the_upper',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='upper', to='rbac.Host', verbose_name='宿主机'),
        ),
        migrations.AddField(
            model_name='host',
            name='vpccon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vpccon', to='rbac.VpcNet', verbose_name='VPC连接'),
        ),
        migrations.AddField(
            model_name='host',
            name='vpcnet',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vpcnet', to='rbac.VpcNet', verbose_name='VPC网络'),
        ),
        migrations.AddField(
            model_name='host',
            name='vpcsw',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rbac.VpcSwitch', verbose_name='VPC交换机'),
        ),
        migrations.AddField(
            model_name='group',
            name='menu',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rbac.Menu', verbose_name='所属菜单'),
        ),
        migrations.AddField(
            model_name='database',
            name='databases',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='databasecase', to='rbac.Mysql', verbose_name='实例名'),
        ),
        migrations.AddField(
            model_name='app',
            name='hosts',
            field=models.ManyToManyField(blank=True, null=True, related_name='apphost', to='rbac.Host', verbose_name='对应主机'),
        ),
        migrations.AddField(
            model_name='app',
            name='pteamrole',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appteam', to='rbac.Pteam', verbose_name='项目组'),
        ),
        migrations.AlterUniqueTogether(
            name='app',
            unique_together=set([('name', 'ab', 'environment')]),
        ),
    ]
